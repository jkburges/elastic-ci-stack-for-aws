version: "3.6"

services:
  app_with_deps:
    image: alpine:latest
    command: "true"
    depends_on:
      - db
      - redis
      - redis-node-0
      - memcache
      - minio
      - selenium

  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    tmpfs:
      - /var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: public.ecr.aws/docker/library/redis:5.0-alpine

  # This creates a redis cluster with 3 master nodes and 3 replicas, as
  # recommended in https://redis.io/docs/manual/scaling.
  # It's likely the replicas aren't necessary in test environments but I don't
  # see any harm including them just to make CI that little bit closer to
  # production.
  #
  # Clustered redis expects to have a public IP address and port that's used
  # by the other nodes as well as clients. This is fiddly to get right in
  # docker so we use a third party docker image that does that work for us.
  # See https://github.com/bitnami/bitnami-docker-redis-cluster.
  redis-node-0:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'
      - 'REDIS_CLUSTER_CREATOR=yes'
      - 'REDIS_CLUSTER_REPLICAS=1'
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5

  redis-node-1:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-2:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-3:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-4:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  redis-node-5:
    image: docker.io/bitnami/redis-cluster:7.0
    environment:
      - 'ALLOW_EMPTY_PASSWORD=true'
      - 'REDIS_NODES=redis-node-0 redis-node-1 redis-node-2 redis-node-3 redis-node-4 redis-node-5'

  memcache:
    image: public.ecr.aws/docker/library/memcached:alpine

  minio:
    image: docker.io/minio/minio:RELEASE.2022-01-08T03-11-54Z
    command: minio server --config-dir tmp/.minio --address :9000 --console-address :9001 tmp/s3
    working_dir: /app
    env_file:
    - .env

  selenium:
    image: docker.io/selenium/standalone-chrome:4.2.1
    shm_size: 2g
    environment:
      SE_NODE_MAX_SESSIONS: 4
      SE_NODE_OVERRIDE_MAX_SESSIONS: "true"
